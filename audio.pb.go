// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: ziyunix/core/audio.proto

package core

import (
	media "github.com/storezhang/media"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 音频
type Audio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编码器
	// @gotags: default:"libmp3lame"
	Codec string `protobuf:"bytes,3,opt,name=codec,proto3" json:"codec,omitempty" default:"libmp3lame"`
	// 编码格式
	// @gotags: default:"3" validate:"required,oneof=1"
	Format media.Format `protobuf:"varint,4,opt,name=format,proto3,enum=storezhang.media.Format" json:"format,omitempty" default:"3" validate:"required,oneof=1"`
	// 视频码率
	// 单位：k
	// @gotags: default:"16"
	Bitrate int32 `protobuf:"varint,6,opt,name=bitrate,proto3" json:"bitrate,omitempty" default:"16"`
	// 动态编码
	// @gotags: default:"true"
	Variable bool `protobuf:"varint,7,opt,name=variable,proto3" json:"variable,omitempty" default:"true"`
	// 音频采样率
	// @gotags: default:"16000"
	Rate int32 `protobuf:"varint,8,opt,name=rate,proto3" json:"rate,omitempty" default:"16000"`
	// 音频通道
	// @gotags: default:"2"
	Channels int32 `protobuf:"varint,9,opt,name=channels,proto3" json:"channels,omitempty" default:"2"`
	// 音量
	// 将浮点型转换成了整数，使用时请根据需要进行转换
	// 转换规则：* 10
	// @gotags: default:"3" validate:"min=1,max=100"
	Volume int32 `protobuf:"varint,10,opt,name=volume,proto3" json:"volume,omitempty" default:"3" validate:"min=1,max=100"`
}

func (x *Audio) Reset() {
	*x = Audio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ziyunix_core_audio_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audio) ProtoMessage() {}

func (x *Audio) ProtoReflect() protoreflect.Message {
	mi := &file_ziyunix_core_audio_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audio.ProtoReflect.Descriptor instead.
func (*Audio) Descriptor() ([]byte, []int) {
	return file_ziyunix_core_audio_proto_rawDescGZIP(), []int{0}
}

func (x *Audio) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *Audio) GetFormat() media.Format {
	if x != nil {
		return x.Format
	}
	return media.Format_FORMAT_UNSPECIFIED
}

func (x *Audio) GetBitrate() int32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *Audio) GetVariable() bool {
	if x != nil {
		return x.Variable
	}
	return false
}

func (x *Audio) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *Audio) GetChannels() int32 {
	if x != nil {
		return x.Channels
	}
	return 0
}

func (x *Audio) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

var File_ziyunix_core_audio_proto protoreflect.FileDescriptor

var file_ziyunix_core_audio_proto_rawDesc = []byte{
	0x0a, 0x18, 0x7a, 0x69, 0x79, 0x75, 0x6e, 0x69, 0x78, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x7a, 0x69, 0x79, 0x75,
	0x6e, 0x69, 0x78, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x1d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x7a,
	0x68, 0x61, 0x6e, 0x67, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x01, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x7a,
	0x68, 0x61, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x69, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x32, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x7a,
	0x69, 0x79, 0x75, 0x6e, 0x69, 0x78, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x01, 0x5a, 0x1c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x69, 0x79, 0x75, 0x6e, 0x69,
	0x78, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x3b, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ziyunix_core_audio_proto_rawDescOnce sync.Once
	file_ziyunix_core_audio_proto_rawDescData = file_ziyunix_core_audio_proto_rawDesc
)

func file_ziyunix_core_audio_proto_rawDescGZIP() []byte {
	file_ziyunix_core_audio_proto_rawDescOnce.Do(func() {
		file_ziyunix_core_audio_proto_rawDescData = protoimpl.X.CompressGZIP(file_ziyunix_core_audio_proto_rawDescData)
	})
	return file_ziyunix_core_audio_proto_rawDescData
}

var file_ziyunix_core_audio_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ziyunix_core_audio_proto_goTypes = []interface{}{
	(*Audio)(nil),     // 0: ziyunix.core.Audio
	(media.Format)(0), // 1: storezhang.media.Format
}
var file_ziyunix_core_audio_proto_depIdxs = []int32{
	1, // 0: ziyunix.core.Audio.format:type_name -> storezhang.media.Format
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ziyunix_core_audio_proto_init() }
func file_ziyunix_core_audio_proto_init() {
	if File_ziyunix_core_audio_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ziyunix_core_audio_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Audio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ziyunix_core_audio_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ziyunix_core_audio_proto_goTypes,
		DependencyIndexes: file_ziyunix_core_audio_proto_depIdxs,
		MessageInfos:      file_ziyunix_core_audio_proto_msgTypes,
	}.Build()
	File_ziyunix_core_audio_proto = out.File
	file_ziyunix_core_audio_proto_rawDesc = nil
	file_ziyunix_core_audio_proto_goTypes = nil
	file_ziyunix_core_audio_proto_depIdxs = nil
}
